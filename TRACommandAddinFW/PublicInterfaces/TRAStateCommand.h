// COPYRIGHT Dassault Systemes 2022
//===================================================================
//
// TRAStateCommand.h
// The state chart based command: TRAStateCommand
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Jun 2022  Creation: Code generated by the CAA wizard  Dell
//===================================================================
#ifndef TRAStateCommand_H
#define TRAStateCommand_H

#include "TRAStCommand.h"
#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "CATIProduct.h"
#include "CATDocument.h"
#include "CATBaseUnknown.h"




class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class ExportedByTRAStCommand TRAStateCommand: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( TRAStateCommand, CATStateCommand )

  public:

	  HRESULT AddExternalComponent(CATIProduct *iThisProd, CATDocument *iDocument, CATIProduct **oNewProduct);

	  void RefreshVisuAndTree(CATBaseUnknown_var spUnknwon);

	  HRESULT CAAMmrGetPartFromProduct(CATIProduct_var       ispProduct,                                
				                 CATISpecObject_var  & ospPartFromProduct);

	   HRESULT CAAMmrGetGeometry(CATISpecObject_var ispModelPart, const CATUnicodeString iInputName,
				 CATBaseUnknown ** oInput);

  TRAStateCommand();
  virtual ~TRAStateCommand();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  

  private:

	  CATIProduct_var _spRootProduct ;


};

//----------------------------------------------------------------------

#endif
